## 4.寻找两个有序数组的中位数:sweat_smile:

[toc]

### 题目描述

给定两个大小为 m 和 n 的有序数组 `nums1` 和 `nums2`。

请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。

你可以假设 `nums1` 和 `nums2` 不会同时为空。

示例 1:

> **nums1 = [1, 3]**
> **nums2 = [2]**
> 
> **则中位数是 2.0**

示例 2:

> **nums1 = [1, 2]**
> **nums2 = [3, 4]**
>
> **则中位数是 (2 + 3)/2 = 2.5**

---

### 分析

<font color='purple'>**trick:假设两个数组元素个数分别是m,n，那么找到第(m+n+1)/2和(m+n+2)/2个元素，取平均即可。**</font>



### 示例代码

* #### XXXX(C++)

```c++
class Solution {
public:
    
};
```

* #### XXXX(Python v1)

```python
class Solution(object,...):
    def XXXX(self,...):
        '''
        :type ...
        :rtype: ...
        ...
        '''
```

* #### continued



[^footnote]: 快乐菜醒每一天!